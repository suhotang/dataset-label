{"version":3,"sources":["icons/BoundingBoxCreate.svg","style/colors.js","icons/ToolbarSelect.svg","components/CreateLabelBoxContainer.js","components/UpdateLabelBoxContainer.js","hooks/usePointerMove.js","hooks/usePointerUp.js","pages/Main.js","App.js","reportWebVitals.js","index.js"],"names":["_defs","_g","borderColor","lightGrayColor","primaryBoxColor","interactionColor","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBoundingBoxCreate","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","id","transform","className","x","y","_rect","_path","ForwardRef","SvgToolbarSelect","d","ContentContainer","styled","div","LabelSelectContainer","LabelBox","initialLabelBoxData","startClientX","startClientY","labelBoxPositionX","labelBoxPositionY","xDiff","yDiff","CreateLabelBoxContainer","labelBoxList","setLabelBoxList","imageUrl","labelSelectBoxRef","useRef","imageBoxRef","useState","onCreateMode","setOnCreateMode","cropEventBound","setCropEventBound","labelBoxData","setLabelBoxData","setOnCreateModeValue","value","onImageBoxPointerMove","useCallback","event","current","rect","getBoundingClientRect","clientX","left","clientY","top","onImageBoxPointerDone","lastX","lastY","labelBoxStyle","getLabelBoxStyle","index","style","Math","abs","addCropEvents","addEventListener","removeCropEvents","removeEventListener","useEffect","onPointerDown","e","alert","focus","preventScroll","onImageBoxPointerDown","display","draggable","src","alt","DragBar","originX","originY","UpdateLabelBoxContainer","changeLabelBoxStyle","newTop","newLeft","map","item","onDraggableMode","setOnDraggableMode","selectedItemList","setSelectedItemList","movePosition","setMovePosition","handler","movePositionX","movePositionY","newLabelBoxStyleList","document","usePointerMove","lastMovePosition","setLastMovePosition","usePointerUp","lastMovePositionX","lastMovePositionY","setOnDraggableModeValue","isSelected","includes","newSelectedItemList","onLabelBoxPointerDown","marginLeft","marginTop","right","marginRight","bottom","marginBottom","PageContainer","section","TopLabelBox","header","RowContainer","SideMenuBox","nav","MenuButton","button","menus","MainPage","fetch","then","response","json","defaultImageUrl","url","setImageUrl","catch","error","console","log","curMenuIndex","setMenuIndex","onMenuChangede","onClick","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e4b3af2c.chunk.js","sourcesContent":["var _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBoundingBoxCreate(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 40,\n    height: 40,\n    viewBox: \"0 0 40 40\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".a,.b{fill:none;}.b{stroke:#424868;stroke-width:2px;}.c{stroke:none;}\"))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-248 -424)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    className: \"a\",\n    width: 40,\n    height: 40,\n    transform: \"translate(248 424)\"\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    className: \"b\",\n    transform: \"translate(260 436)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    className: \"c\",\n    width: 16,\n    height: 16\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    className: \"a\",\n    x: 1,\n    y: 1,\n    width: 14,\n    height: 14\n  })))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBoundingBoxCreate);\nexport default __webpack_public_path__ + \"static/media/BoundingBoxCreate.72e3ee62.svg\";\nexport { ForwardRef as ReactComponent };","export const borderColor = \"#EBEDF2\"\r\n\r\nexport const textColor = \"#141746\"\r\n\r\nexport const lightGrayColor = \"#FCFCFC\"\r\n\r\nexport const primaryBoxColor = \"#5668D9\"\r\n\r\nexport const interactionColor = \"#D5D9E2\"\r\n\r\nexport const darkGrayColor = \"#424868\"\r\n","var _defs, _rect, _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgToolbarSelect(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 40,\n    height: 40,\n    viewBox: \"0 0 40 40\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \".a{fill:none;}.b{fill:#424868;}\"))), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    className: \"a\",\n    width: 40,\n    height: 40\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"b\",\n    d: \"M8,0l8,19.237L8,16.344,0,19.237Z\",\n    transform: \"translate(6 13) rotate(-30)\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgToolbarSelect);\nexport default __webpack_public_path__ + \"static/media/ToolbarSelect.16e5edbf.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useRef, useCallback, useEffect } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { primaryBoxColor } from \"../style/colors\"\r\n\r\nconst ContentContainer = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`\r\n\r\nconst LabelSelectContainer = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n  overflow: hidden;\r\n`\r\n\r\nconst LabelBox = styled.div`\r\n  position: absolute;\r\n  border: 3px solid ${primaryBoxColor};\r\n  cursor: move;\r\n  touch-action: none;\r\n`\r\n\r\nconst initialLabelBoxData = {\r\n  startClientX: 0,\r\n  startClientY: 0,\r\n  labelBoxPositionX: 0,\r\n  labelBoxPositionY: 0,\r\n  xDiff: 0,\r\n  yDiff: 0,\r\n}\r\n\r\nconst selectLabelMaxLen = 5\r\n\r\nexport default function CreateLabelBoxContainer({\r\n  labelBoxList,\r\n  setLabelBoxList,\r\n  imageUrl,\r\n}) {\r\n  const labelSelectBoxRef = useRef()\r\n  const imageBoxRef = useRef()\r\n  const [onCreateMode, setOnCreateMode] = useState(false)\r\n  const [cropEventBound, setCropEventBound] = useState(false)\r\n  const [labelBoxData, setLabelBoxData] = useState({\r\n    ...initialLabelBoxData,\r\n  })\r\n\r\n  const setOnCreateModeValue = (value) => {\r\n    setOnCreateMode(value)\r\n  }\r\n\r\n  const onImageBoxPointerDown = (event) => {\r\n    if (labelBoxList.length >= selectLabelMaxLen) {\r\n      alert(`라벨링 박스는 최대 ${selectLabelMaxLen}개까지만 생성할 수 있습니다. `)\r\n      return\r\n    }\r\n\r\n    if (imageBoxRef.current == null) {\r\n      return\r\n    }\r\n\r\n    // Focus for detecting keypress.\r\n    labelSelectBoxRef.current.focus({ preventScroll: true })\r\n\r\n    const rect = imageBoxRef.current.getBoundingClientRect()\r\n    const x = event.clientX - rect.left\r\n    const y = event.clientY - rect.top\r\n\r\n    setLabelBoxData({\r\n      ...initialLabelBoxData,\r\n      startClientX: x,\r\n      startClientY: y,\r\n      labelBoxPositionX: x,\r\n      labelBoxPositionY: y,\r\n    })\r\n    setOnCreateModeValue(true)\r\n  }\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const onImageBoxPointerMove = useCallback(\r\n    (event) => {\r\n      if (!onCreateMode) {\r\n        return\r\n      }\r\n\r\n      if (imageBoxRef.current == null) {\r\n        return\r\n      }\r\n\r\n      const rect = imageBoxRef.current.getBoundingClientRect()\r\n      const x = event.clientX - rect.left\r\n      const y = event.clientY - rect.top\r\n\r\n      setLabelBoxData({\r\n        ...labelBoxData,\r\n        labelBoxPositionX: x,\r\n        labelBoxPositionY: y,\r\n        xDiff: labelBoxData.startClientX - x,\r\n        yDiff: labelBoxData.startClientY - y,\r\n      })\r\n    },\r\n    [labelBoxData, onCreateMode]\r\n  )\r\n\r\n  const onImageBoxPointerDone = useCallback(\r\n    (event) => {\r\n      if (labelBoxList.length >= selectLabelMaxLen) {\r\n        return\r\n      }\r\n\r\n      if (onCreateMode) {\r\n        if (imageBoxRef.current == null) {\r\n          return\r\n        }\r\n\r\n        const rect = imageBoxRef.current.getBoundingClientRect()\r\n        const lastX = event.clientX - rect.left\r\n        const lastY = event.clientY - rect.top\r\n\r\n        const labelBoxStyle = getLabelBoxStyle()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        setOnCreateModeValue(false)\r\n        setLabelBoxList([\r\n          ...labelBoxList,\r\n          {\r\n            index: labelBoxList.length,\r\n            style: {\r\n              top: labelBoxStyle.top,\r\n              left: labelBoxStyle.left,\r\n              width: Math.abs(lastX - labelBoxStyle.left),\r\n              height: Math.abs(lastY - labelBoxStyle.top),\r\n            },\r\n          },\r\n        ])\r\n        setLabelBoxData({ ...initialLabelBoxData })\r\n      }\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [onCreateMode, setLabelBoxData]\r\n  )\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const addCropEvents = useCallback(() => {\r\n    if (cropEventBound) {\r\n      return\r\n    }\r\n\r\n    if (labelSelectBoxRef.current == null) {\r\n      return\r\n    }\r\n\r\n    labelSelectBoxRef.current.addEventListener(\"pointermove\", onImageBoxPointerMove)\r\n    labelSelectBoxRef.current.addEventListener(\"pointerup\", onImageBoxPointerDone)\r\n    labelSelectBoxRef.current.addEventListener(\"pointercancel\", onImageBoxPointerDone)\r\n\r\n    setCropEventBound(true)\r\n  }, [cropEventBound, onImageBoxPointerDone, onImageBoxPointerMove])\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const removeCropEvents = useCallback(() => {\r\n    if (!cropEventBound) {\r\n      return\r\n    }\r\n\r\n    if (labelSelectBoxRef.current == null) {\r\n      return\r\n    }\r\n\r\n    labelSelectBoxRef.current.removeEventListener(\"pointermove\", onImageBoxPointerMove)\r\n    labelSelectBoxRef.current.removeEventListener(\"pointerup\", onImageBoxPointerDone)\r\n    labelSelectBoxRef.current.removeEventListener(\"pointercancel\", onImageBoxPointerDone)\r\n\r\n    setCropEventBound(false)\r\n  }, [cropEventBound, onImageBoxPointerDone, onImageBoxPointerMove])\r\n\r\n  const getLabelBoxStyle = () => {\r\n    let top = labelBoxData.startClientY\r\n    let left = labelBoxData.startClientX\r\n    const width = Math.abs(labelBoxData.xDiff)\r\n    const height = Math.abs(labelBoxData.yDiff)\r\n\r\n    if (labelBoxData.xDiff > 0) {\r\n      left -= width\r\n    }\r\n\r\n    if (labelBoxData.yDiff > 0) {\r\n      top -= height\r\n    }\r\n\r\n    return {\r\n      top,\r\n      left,\r\n      width,\r\n      height,\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (onCreateMode && !cropEventBound) {\r\n      // Add pointer move, up, cancel event listeners\r\n      addCropEvents()\r\n    }\r\n    if (!onCreateMode && cropEventBound) {\r\n      // Remove event listeners\r\n      removeCropEvents()\r\n    }\r\n  }, [labelBoxData, onCreateMode, cropEventBound, addCropEvents, removeCropEvents])\r\n\r\n  return (\r\n    <ContentContainer>\r\n      <LabelSelectContainer\r\n        ref={labelSelectBoxRef}\r\n        onPointerDown={(e) => onImageBoxPointerDown(e)}\r\n      >\r\n        <div\r\n          ref={imageBoxRef}\r\n          style={{\r\n            display: \"inline-block\",\r\n            width: \"fit-content\",\r\n            height: \"fit-content\",\r\n          }}\r\n        >\r\n          <img draggable={false} src={imageUrl} alt=\"labeling-img\" />\r\n        </div>\r\n        {onCreateMode && <LabelBox style={getLabelBoxStyle()} />}\r\n      </LabelSelectContainer>\r\n    </ContentContainer>\r\n  )\r\n}\r\n","import React, { useState, useRef, useCallback, useEffect } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport usePointerMove from \"../hooks/usePointerMove\"\r\nimport usePointerUp from \"../hooks/usePointerUp\"\r\nimport { primaryBoxColor } from \"../style/colors\"\r\n\r\nconst ContentContainer = styled.div`\r\n  flex: 1;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`\r\n\r\nconst LabelSelectContainer = styled.div`\r\n  position: relative;\r\n  display: inline-block;\r\n  overflow: hidden;\r\n`\r\n\r\nconst LabelBox = styled.div`\r\n  position: absolute;\r\n  border: 3px solid ${primaryBoxColor};\r\n  cursor: move;\r\n  touch-action: none;\r\n`\r\n\r\nconst DragBar = styled.div`\r\n  position: absolute;\r\n  width: 16px;\r\n  height: 16px;\r\n  box-sizing: border-box;\r\n  border: 3px solid ${primaryBoxColor};\r\n  background: white;\r\n`\r\n\r\nconst initialLabelBoxData = {\r\n  originX: 0,\r\n  originY: 0,\r\n  startClientX: 0,\r\n  startClientY: 0,\r\n  labelBoxPositionX: 0,\r\n  labelBoxPositionY: 0,\r\n  xDiff: 0,\r\n  yDiff: 0,\r\n}\r\n\r\nexport default function UpdateLabelBoxContainer({\r\n  labelBoxList = [],\r\n  setLabelBoxList,\r\n  imageUrl,\r\n}) {\r\n  const changeLabelBoxStyle = useCallback(\r\n    (index, originY, originX, yDiff, xDiff) => {\r\n      if (originY === 0 || originX === 0) {\r\n        return labelBoxList\r\n      }\r\n\r\n      let newTop = originY + yDiff\r\n      let newLeft = originX + xDiff\r\n\r\n      return labelBoxList.map((item) => {\r\n        if (item.index === index) {\r\n          return {\r\n            index,\r\n            style: { ...item.style, top: newTop, left: newLeft },\r\n          }\r\n        }\r\n        return item\r\n      })\r\n    },\r\n    // eslint-disable-next-line no-use-before-define\r\n    [labelBoxList]\r\n  )\r\n\r\n  const labelSelectBoxRef = useRef()\r\n  const imageBoxRef = useRef()\r\n  const [onDraggableMode, setOnDraggableMode] = useState(false)\r\n  const [labelBoxData, setLabelBoxData] = useState({\r\n    ...initialLabelBoxData,\r\n  })\r\n  const [selectedItemList, setSelectedItemList] = useState([])\r\n  // not using pointer move position value\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [_movePositionX, _movePositionY] = usePointerMove(\r\n    labelSelectBoxRef,\r\n    imageBoxRef,\r\n    onDraggableMode,\r\n    labelBoxData,\r\n    changeLabelBoxStyle,\r\n    setLabelBoxList,\r\n    setLabelBoxData\r\n  )\r\n  const [lastMovePositionX, lastMovePositionY] = usePointerUp(\r\n    labelSelectBoxRef,\r\n    onDraggableMode\r\n  )\r\n\r\n  const setOnDraggableModeValue = (value) => {\r\n    setOnDraggableMode(value)\r\n  }\r\n\r\n  const onLabelBoxPointerDown = (index, event) => {\r\n    if (!selectedItemList.includes(index)) {\r\n      const newSelectedItemList = [...selectedItemList, index]\r\n      setSelectedItemList(newSelectedItemList)\r\n    }\r\n\r\n    if (imageBoxRef.current == null) {\r\n      return\r\n    }\r\n\r\n    // Focus for detecting keypress.\r\n    labelSelectBoxRef.current.focus({ preventScroll: true })\r\n\r\n    const rect = imageBoxRef.current.getBoundingClientRect()\r\n    const x = event.clientX - rect.left\r\n    const y = event.clientY - rect.top\r\n\r\n    setLabelBoxData({\r\n      ...initialLabelBoxData,\r\n      originX: labelBoxList[index].style.left,\r\n      originY: labelBoxList[index].style.top,\r\n      startClientX: x,\r\n      startClientY: y,\r\n      labelBoxPositionX: x,\r\n      labelBoxPositionY: y,\r\n      index,\r\n    })\r\n    setOnDraggableModeValue(true)\r\n  }\r\n\r\n  // Handle onPointerUp event\r\n  useEffect(() => {\r\n    if (onDraggableMode) {\r\n      setLabelBoxData({ ...initialLabelBoxData })\r\n      setOnDraggableModeValue(false)\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [lastMovePositionX, lastMovePositionY])\r\n\r\n  return (\r\n    <ContentContainer>\r\n      <LabelSelectContainer ref={labelSelectBoxRef}>\r\n        <div\r\n          ref={imageBoxRef}\r\n          style={{ display: \"inline-block\", width: \"fit-content\", height: \"fit-content\" }}\r\n        >\r\n          <img draggable={false} src={imageUrl} alt=\"labeling-img\" />\r\n        </div>\r\n        {labelBoxList.map((item) => {\r\n          const { index, style } = item\r\n          const isSelected = selectedItemList.includes(index)\r\n          return (\r\n            <LabelBox\r\n              id={index}\r\n              style={style}\r\n              onPointerDown={(event) => onLabelBoxPointerDown(index, event)}\r\n            >\r\n              {isSelected && (\r\n                <>\r\n                  <DragBar\r\n                    className=\"leftTop\"\r\n                    style={{ top: 0, left: 0, marginLeft: \"-10px\", marginTop: \"-10px\" }}\r\n                  />\r\n                  <DragBar\r\n                    className=\"rightTop\"\r\n                    style={{ top: 0, right: 0, marginRight: \"-10px\", marginTop: \"-10px\" }}\r\n                  />\r\n                  <DragBar\r\n                    className=\"leftBottom\"\r\n                    style={{\r\n                      bottom: 0,\r\n                      left: 0,\r\n                      marginLeft: \"-10px\",\r\n                      marginBottom: \"-10px\",\r\n                    }}\r\n                  />\r\n                  <DragBar\r\n                    className=\"rightBottom\"\r\n                    style={{\r\n                      bottom: 0,\r\n                      right: 0,\r\n                      marginRight: \"-10px\",\r\n                      marginBottom: \"-10px\",\r\n                    }}\r\n                  />\r\n                  <DragBar\r\n                    className=\"topCenter\"\r\n                    style={{ top: 0, left: 0, marginLeft: \"-10px\", marginTop: \"-10px\" }}\r\n                  />\r\n                  <DragBar\r\n                    className=\"bottomCenter\"\r\n                    style={{ top: 0, left: 0, marginLeft: \"-10px\", marginTop: \"-10px\" }}\r\n                  />\r\n                  <DragBar\r\n                    className=\"leftCenter\"\r\n                    style={{ top: 0, left: 0, marginLeft: \"-10px\", marginTop: \"-10px\" }}\r\n                  />\r\n                  <DragBar\r\n                    className=\"rightCenter\"\r\n                    style={{ top: 0, left: 0, marginLeft: \"-10px\", marginTop: \"-10px\" }}\r\n                  />\r\n                </>\r\n              )}\r\n            </LabelBox>\r\n          )\r\n        })}\r\n      </LabelSelectContainer>\r\n    </ContentContainer>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\n\r\nexport default function usePointerMove(\r\n  labelSelectBoxRef,\r\n  imageBoxRef,\r\n  onDraggableMode,\r\n  labelBoxData,\r\n  changeLabelBoxStyle,\r\n  setLabelBoxList,\r\n  setLabelBoxData\r\n) {\r\n  const [movePosition, setMovePosition] = useState([0, 0])\r\n\r\n  useEffect(() => {\r\n    if (labelSelectBoxRef.current == null) {\r\n      return\r\n    }\r\n\r\n    const handler = ({ clientX, clientY }) => {\r\n      if (!onDraggableMode) {\r\n        return\r\n      }\r\n\r\n      if (imageBoxRef.current == null) {\r\n        return\r\n      }\r\n\r\n      const movePositionX = clientX\r\n      const movePositionY = clientY\r\n      setMovePosition([movePositionX, movePositionY])\r\n\r\n      const rect = imageBoxRef.current.getBoundingClientRect()\r\n      const x = movePositionX - rect.left\r\n      const y = movePositionY - rect.top\r\n\r\n      // Set label box style\r\n      const newLabelBoxStyleList = changeLabelBoxStyle(\r\n        labelBoxData.index,\r\n        labelBoxData.originY,\r\n        labelBoxData.originX,\r\n        y - labelBoxData.startClientY, // yDiff\r\n        x - labelBoxData.startClientX // xDiff\r\n      )\r\n      setLabelBoxList([...newLabelBoxStyleList])\r\n\r\n      // Set label box data\r\n      setLabelBoxData({\r\n        ...labelBoxData,\r\n        labelBoxPositionX: x,\r\n        labelBoxPositionY: y,\r\n        xDiff: labelBoxData.startClientX - x,\r\n        yDiff: labelBoxData.startClientY - y,\r\n      })\r\n    }\r\n    document.addEventListener(\"pointermove\", handler)\r\n    return () => {\r\n      document.removeEventListener(\"pointermove\", handler)\r\n    }\r\n  }, [\r\n    changeLabelBoxStyle,\r\n    imageBoxRef,\r\n    labelBoxData,\r\n    labelSelectBoxRef,\r\n    onDraggableMode,\r\n    setLabelBoxData,\r\n    setLabelBoxList,\r\n  ])\r\n\r\n  return movePosition\r\n}\r\n","import { useState, useEffect } from \"react\"\r\n\r\nexport default function usePointerUp(ref, onDraggableMode) {\r\n  const [lastMovePosition, setLastMovePosition] = useState([0, 0])\r\n\r\n  useEffect(() => {\r\n    if (ref.current == null) {\r\n      return\r\n    }\r\n\r\n    const handler = ({ clientX, clientY }) => {\r\n      if (onDraggableMode) {\r\n        const lastMovePositionX = clientX\r\n        const lastMovePositionY = clientY\r\n        setLastMovePosition([lastMovePositionX, lastMovePositionY])\r\n      }\r\n    }\r\n    document.addEventListener(\"pointerup\", handler)\r\n    return () => {\r\n      document.removeEventListener(\"pointerup\", handler)\r\n    }\r\n  }, [onDraggableMode, ref])\r\n\r\n  return lastMovePosition\r\n}\r\n","import React, { useCallback, useEffect, useState } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport {\r\n  borderColor,\r\n  interactionColor,\r\n  lightGrayColor,\r\n  darkGrayColor,\r\n} from \"../style/colors\"\r\nimport { ReactComponent as BoxIcon } from \"../icons/BoundingBoxCreate.svg\"\r\nimport { ReactComponent as SelectIcon } from \"../icons/ToolbarSelect.svg\"\r\nimport CreateLabelBoxContainer from \"../components/CreateLabelBoxContainer\"\r\nimport UpdateLabelBoxContainer from \"../components/UpdateLabelBoxContainer\"\r\n\r\nconst PageContainer = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: white;\r\n  padding: 0;\r\n  margin: 0;\r\n`\r\n\r\nconst TopLabelBox = styled.header`\r\n  display: flex;\r\n  flex: 0 0 64px;\r\n  width: 100%;\r\n  height: 64px;\r\n  box-sizing: border-box;\r\n  border: 1px solid ${borderColor};\r\n  padding: 21px 0 16px 56px;\r\n  background: ${lightGrayColor};\r\n`\r\n\r\nconst RowContainer = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  width: 100%;\r\n`\r\n\r\nconst SideMenuBox = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 56px;\r\n  height: 100%;\r\n  flex: 0 0 56px;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  border: 1px solid ${borderColor};\r\n  border-top: none;\r\n  background: ${lightGrayColor};\r\n`\r\n\r\nconst MenuButton = styled.button`\r\n  display: flex;\r\n  width: 40px;\r\n  height: 40px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  background: ${(props) => (props.isSelected ? interactionColor : \"transparent\")};\r\n  border: none;\r\n  border-radius: 8px;\r\n  margin: 8px;\r\n  &:hover {\r\n    background: ${interactionColor};\r\n  }\r\n  svg {\r\n    path {\r\n      fill: ${(props) => (props.isSelected ? darkGrayColor : \"none\")};\r\n    }\r\n  }\r\n`\r\n\r\nconst menus = {\r\n  createLabel: 1,\r\n  updateLabel: 2,\r\n}\r\n\r\nexport default function MainPage() {\r\n  useEffect(() => {\r\n    fetch(\"https://jsonplaceholder.typicode.com/photos\")\r\n      .then((response) => response.json())\r\n      .then((json) => {\r\n        const defaultImageUrl = json[10]?.url\r\n        setImageUrl(defaultImageUrl)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n  }, [])\r\n\r\n  const [labelBoxList, setLabelBoxList] = useState([])\r\n  const [curMenuIndex, setMenuIndex] = useState(1)\r\n  const [imageUrl, setImageUrl] = useState(null)\r\n  const onMenuChangede = useCallback((index) => {\r\n    setMenuIndex(index)\r\n  }, [])\r\n\r\n  const setLabelBoxData = (value) => {\r\n    setLabelBoxList(value)\r\n  }\r\n\r\n  return (\r\n    <PageContainer>\r\n      <TopLabelBox>Dataset Label</TopLabelBox>\r\n      <RowContainer>\r\n        <SideMenuBox>\r\n          <MenuButton\r\n            isSelected={curMenuIndex === menus.createLabel}\r\n            onClick={() => onMenuChangede(menus.createLabel)}\r\n          >\r\n            <SelectIcon />\r\n          </MenuButton>\r\n          <MenuButton\r\n            isSelected={curMenuIndex === menus.updateLabel}\r\n            onClick={() => onMenuChangede(menus.updateLabel)}\r\n          >\r\n            <BoxIcon />\r\n          </MenuButton>\r\n        </SideMenuBox>\r\n        {curMenuIndex === menus.createLabel ? (\r\n          <CreateLabelBoxContainer\r\n            labelBoxList={labelBoxList}\r\n            setLabelBoxList={setLabelBoxData}\r\n            imageUrl={imageUrl}\r\n          />\r\n        ) : (\r\n          <UpdateLabelBoxContainer\r\n            labelBoxList={labelBoxList}\r\n            setLabelBoxList={setLabelBoxData}\r\n            imageUrl={imageUrl}\r\n          />\r\n        )}\r\n      </RowContainer>\r\n    </PageContainer>\r\n  )\r\n}\r\n","import MainPage from \"./pages/Main\";\n\nfunction App() {\n  return (\n    <MainPage />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}